[{"name":"abstract fun shutdown()","description":"com.gabrielfeo.develocity.api.DevelocityApi.shutdown","location":"library/com.gabrielfeo.develocity.api/-develocity-api/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","com.gabrielfeo.develocity.api.DevelocityApi.shutdown"]},{"name":"abstract val authApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.authApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/auth-api.html","searchKeys":["authApi","abstract val authApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.authApi"]},{"name":"abstract val buildCacheApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.buildCacheApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/build-cache-api.html","searchKeys":["buildCacheApi","abstract val buildCacheApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.buildCacheApi"]},{"name":"abstract val buildsApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.buildsApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/builds-api.html","searchKeys":["buildsApi","abstract val buildsApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.buildsApi"]},{"name":"abstract val config: Config","description":"com.gabrielfeo.develocity.api.DevelocityApi.config","location":"library/com.gabrielfeo.develocity.api/-develocity-api/config.html","searchKeys":["config","abstract val config: Config","com.gabrielfeo.develocity.api.DevelocityApi.config"]},{"name":"abstract val metaApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.metaApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/meta-api.html","searchKeys":["metaApi","abstract val metaApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.metaApi"]},{"name":"abstract val projectsApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.projectsApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/projects-api.html","searchKeys":["projectsApi","abstract val projectsApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.projectsApi"]},{"name":"abstract val testDistributionApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.testDistributionApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/test-distribution-api.html","searchKeys":["testDistributionApi","abstract val testDistributionApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.testDistributionApi"]},{"name":"abstract val testsApi: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.DevelocityApi.testsApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/tests-api.html","searchKeys":["testsApi","abstract val testsApi: <Error class: unknown class>","com.gabrielfeo.develocity.api.DevelocityApi.testsApi"]},{"name":"constructor(cacheEnabled: Boolean = env[\"DEVELOCITY_API_CACHE_ENABLED\"].toBoolean(), cacheDir: File = env[\"DEVELOCITY_API_CACHE_DIR\"]?.let(::File)\n                ?: File(systemProperties[\"user.home\"], \".develocity-api-kotlin-cache\"), maxCacheSize: Long = env[\"DEVELOCITY_API_MAX_CACHE_SIZE\"]?.toLong()\n            ?: 1_000_000_000L, longTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_LONG_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: Regex(\n                    \"\"\"\n                    .*/api/builds/[\\d\\w]+/(?:gradle|maven)-(?:attributes|build-cache-performance)\n                \"\"\".trimIndent()\n                ), longTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 365.days.inWholeSeconds, shortTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: \"\"\".*/builds(?:\\?.*|\\Z)\"\"\".toRegex(), shortTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 1.days.inWholeSeconds)","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.CacheConfig","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/-cache-config.html","searchKeys":["CacheConfig","constructor(cacheEnabled: Boolean = env[\"DEVELOCITY_API_CACHE_ENABLED\"].toBoolean(), cacheDir: File = env[\"DEVELOCITY_API_CACHE_DIR\"]?.let(::File)\n                ?: File(systemProperties[\"user.home\"], \".develocity-api-kotlin-cache\"), maxCacheSize: Long = env[\"DEVELOCITY_API_MAX_CACHE_SIZE\"]?.toLong()\n            ?: 1_000_000_000L, longTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_LONG_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: Regex(\n                    \"\"\"\n                    .*/api/builds/[\\d\\w]+/(?:gradle|maven)-(?:attributes|build-cache-performance)\n                \"\"\".trimIndent()\n                ), longTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 365.days.inWholeSeconds, shortTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: \"\"\".*/builds(?:\\?.*|\\Z)\"\"\".toRegex(), shortTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 1.days.inWholeSeconds)","com.gabrielfeo.develocity.api.Config.CacheConfig.CacheConfig"]},{"name":"constructor(logLevel: String? = env[\"DEVELOCITY_API_LOG_LEVEL\"], apiUrl: String = env[\"DEVELOCITY_API_URL\"]\n            ?: error(\"DEVELOCITY_API_URL is required\"), apiToken: () -> String = {\n        env[\"DEVELOCITY_API_TOKEN\"]\n            ?: error(\"DEVELOCITY_API_TOKEN is required\")\n    }, clientBuilder: <Error class: unknown class> = basicOkHttpClient.newBuilder(), maxConcurrentRequests: Int? = env[\"DEVELOCITY_API_MAX_CONCURRENT_REQUESTS\"]?.toInt(), readTimeoutMillis: Long = env[\"DEVELOCITY_API_READ_TIMEOUT_MILLIS\"]?.toLong()\n            ?: 60_000L, cacheConfig: Config.CacheConfig = CacheConfig())","description":"com.gabrielfeo.develocity.api.Config.Config","location":"library/com.gabrielfeo.develocity.api/-config/-config.html","searchKeys":["Config","constructor(logLevel: String? = env[\"DEVELOCITY_API_LOG_LEVEL\"], apiUrl: String = env[\"DEVELOCITY_API_URL\"]\n            ?: error(\"DEVELOCITY_API_URL is required\"), apiToken: () -> String = {\n        env[\"DEVELOCITY_API_TOKEN\"]\n            ?: error(\"DEVELOCITY_API_TOKEN is required\")\n    }, clientBuilder: <Error class: unknown class> = basicOkHttpClient.newBuilder(), maxConcurrentRequests: Int? = env[\"DEVELOCITY_API_MAX_CONCURRENT_REQUESTS\"]?.toInt(), readTimeoutMillis: Long = env[\"DEVELOCITY_API_READ_TIMEOUT_MILLIS\"]?.toLong()\n            ?: 60_000L, cacheConfig: Config.CacheConfig = CacheConfig())","com.gabrielfeo.develocity.api.Config.Config"]},{"name":"data class CacheConfig(val cacheEnabled: Boolean = env[\"DEVELOCITY_API_CACHE_ENABLED\"].toBoolean(), val cacheDir: File = env[\"DEVELOCITY_API_CACHE_DIR\"]?.let(::File)\n                ?: File(systemProperties[\"user.home\"], \".develocity-api-kotlin-cache\"), val maxCacheSize: Long = env[\"DEVELOCITY_API_MAX_CACHE_SIZE\"]?.toLong()\n            ?: 1_000_000_000L, val longTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_LONG_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: Regex(\n                    \"\"\"\n                    .*/api/builds/[\\d\\w]+/(?:gradle|maven)-(?:attributes|build-cache-performance)\n                \"\"\".trimIndent()\n                ), val longTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 365.days.inWholeSeconds, val shortTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: \"\"\".*/builds(?:\\?.*|\\Z)\"\"\".toRegex(), val shortTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 1.days.inWholeSeconds)","description":"com.gabrielfeo.develocity.api.Config.CacheConfig","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/index.html","searchKeys":["CacheConfig","data class CacheConfig(val cacheEnabled: Boolean = env[\"DEVELOCITY_API_CACHE_ENABLED\"].toBoolean(), val cacheDir: File = env[\"DEVELOCITY_API_CACHE_DIR\"]?.let(::File)\n                ?: File(systemProperties[\"user.home\"], \".develocity-api-kotlin-cache\"), val maxCacheSize: Long = env[\"DEVELOCITY_API_MAX_CACHE_SIZE\"]?.toLong()\n            ?: 1_000_000_000L, val longTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_LONG_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: Regex(\n                    \"\"\"\n                    .*/api/builds/[\\d\\w]+/(?:gradle|maven)-(?:attributes|build-cache-performance)\n                \"\"\".trimIndent()\n                ), val longTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 365.days.inWholeSeconds, val shortTermCacheUrlPattern: <Error class: unknown class> = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_URL_PATTERN\"]?.toRegex()\n                ?: \"\"\".*/builds(?:\\?.*|\\Z)\"\"\".toRegex(), val shortTermCacheMaxAge: Long = env[\"DEVELOCITY_API_SHORT_TERM_CACHE_MAX_AGE\"]?.toLong()\n                ?: 1.days.inWholeSeconds)","com.gabrielfeo.develocity.api.Config.CacheConfig"]},{"name":"data class Config(val logLevel: String? = env[\"DEVELOCITY_API_LOG_LEVEL\"], val apiUrl: String = env[\"DEVELOCITY_API_URL\"]\n            ?: error(\"DEVELOCITY_API_URL is required\"), val apiToken: () -> String = {\n        env[\"DEVELOCITY_API_TOKEN\"]\n            ?: error(\"DEVELOCITY_API_TOKEN is required\")\n    }, val clientBuilder: <Error class: unknown class> = basicOkHttpClient.newBuilder(), val maxConcurrentRequests: Int? = env[\"DEVELOCITY_API_MAX_CONCURRENT_REQUESTS\"]?.toInt(), val readTimeoutMillis: Long = env[\"DEVELOCITY_API_READ_TIMEOUT_MILLIS\"]?.toLong()\n            ?: 60_000L, val cacheConfig: Config.CacheConfig = CacheConfig())","description":"com.gabrielfeo.develocity.api.Config","location":"library/com.gabrielfeo.develocity.api/-config/index.html","searchKeys":["Config","data class Config(val logLevel: String? = env[\"DEVELOCITY_API_LOG_LEVEL\"], val apiUrl: String = env[\"DEVELOCITY_API_URL\"]\n            ?: error(\"DEVELOCITY_API_URL is required\"), val apiToken: () -> String = {\n        env[\"DEVELOCITY_API_TOKEN\"]\n            ?: error(\"DEVELOCITY_API_TOKEN is required\")\n    }, val clientBuilder: <Error class: unknown class> = basicOkHttpClient.newBuilder(), val maxConcurrentRequests: Int? = env[\"DEVELOCITY_API_MAX_CONCURRENT_REQUESTS\"]?.toInt(), val readTimeoutMillis: Long = env[\"DEVELOCITY_API_READ_TIMEOUT_MILLIS\"]?.toLong()\n            ?: 60_000L, val cacheConfig: Config.CacheConfig = CacheConfig())","com.gabrielfeo.develocity.api.Config"]},{"name":"fun <Error class: unknown class>.getBuildsFlow(since: Long? = null, sinceBuild: String? = null, fromInstant: Long? = null, fromBuild: String? = null, query: String? = null, reverse: Boolean? = null, maxWaitSecs: Int? = null, buildsPerPage: Int = API_MAX_BUILDS, models: List<<Error class: unknown class>>? = null, allModels: Boolean? = false): <Error class: unknown class><<Error class: unknown class>>","description":"com.gabrielfeo.develocity.api.extension.getBuildsFlow","location":"library/com.gabrielfeo.develocity.api.extension/get-builds-flow.html","searchKeys":["getBuildsFlow","fun <Error class: unknown class>.getBuildsFlow(since: Long? = null, sinceBuild: String? = null, fromInstant: Long? = null, fromBuild: String? = null, query: String? = null, reverse: Boolean? = null, maxWaitSecs: Int? = null, buildsPerPage: Int = API_MAX_BUILDS, models: List<<Error class: unknown class>>? = null, allModels: Boolean? = false): <Error class: unknown class><<Error class: unknown class>>","com.gabrielfeo.develocity.api.extension.getBuildsFlow"]},{"name":"fun <Error class: unknown class>.getGradleAttributesFlow(since: Long = 0, sinceBuild: String? = null, fromInstant: Long? = null, fromBuild: String? = null, query: String? = null, reverse: Boolean? = null, maxWaitSecs: Int? = null, scope: <Error class: unknown class> = GlobalScope, models: List<<Error class: unknown class>>? = null): <Error class: unknown class><<Error class: unknown class>>","description":"com.gabrielfeo.develocity.api.extension.getGradleAttributesFlow","location":"library/com.gabrielfeo.develocity.api.extension/get-gradle-attributes-flow.html","searchKeys":["getGradleAttributesFlow","fun <Error class: unknown class>.getGradleAttributesFlow(since: Long = 0, sinceBuild: String? = null, fromInstant: Long? = null, fromBuild: String? = null, query: String? = null, reverse: Boolean? = null, maxWaitSecs: Int? = null, scope: <Error class: unknown class> = GlobalScope, models: List<<Error class: unknown class>>? = null): <Error class: unknown class><<Error class: unknown class>>","com.gabrielfeo.develocity.api.extension.getGradleAttributesFlow"]},{"name":"fun newInstance(config: Config = Config()): DevelocityApi","description":"com.gabrielfeo.develocity.api.DevelocityApi.Companion.newInstance","location":"library/com.gabrielfeo.develocity.api/-develocity-api/-companion/new-instance.html","searchKeys":["newInstance","fun newInstance(config: Config = Config()): DevelocityApi","com.gabrielfeo.develocity.api.DevelocityApi.Companion.newInstance"]},{"name":"interface DevelocityApi","description":"com.gabrielfeo.develocity.api.DevelocityApi","location":"library/com.gabrielfeo.develocity.api/-develocity-api/index.html","searchKeys":["DevelocityApi","interface DevelocityApi","com.gabrielfeo.develocity.api.DevelocityApi"]},{"name":"object Companion","description":"com.gabrielfeo.develocity.api.DevelocityApi.Companion","location":"library/com.gabrielfeo.develocity.api/-develocity-api/-companion/index.html","searchKeys":["Companion","object Companion","com.gabrielfeo.develocity.api.DevelocityApi.Companion"]},{"name":"operator fun List<<Error class: unknown class>>.contains(name: String): Boolean","description":"com.gabrielfeo.develocity.api.extension.contains","location":"library/com.gabrielfeo.develocity.api.extension/contains.html","searchKeys":["contains","operator fun List<<Error class: unknown class>>.contains(name: String): Boolean","com.gabrielfeo.develocity.api.extension.contains"]},{"name":"operator fun List<<Error class: unknown class>>.get(name: String): String?","description":"com.gabrielfeo.develocity.api.extension.get","location":"library/com.gabrielfeo.develocity.api.extension/get.html","searchKeys":["get","operator fun List<<Error class: unknown class>>.get(name: String): String?","com.gabrielfeo.develocity.api.extension.get"]},{"name":"val apiToken: () -> String","description":"com.gabrielfeo.develocity.api.Config.apiToken","location":"library/com.gabrielfeo.develocity.api/-config/api-token.html","searchKeys":["apiToken","val apiToken: () -> String","com.gabrielfeo.develocity.api.Config.apiToken"]},{"name":"val apiUrl: String","description":"com.gabrielfeo.develocity.api.Config.apiUrl","location":"library/com.gabrielfeo.develocity.api/-config/api-url.html","searchKeys":["apiUrl","val apiUrl: String","com.gabrielfeo.develocity.api.Config.apiUrl"]},{"name":"val cacheConfig: Config.CacheConfig","description":"com.gabrielfeo.develocity.api.Config.cacheConfig","location":"library/com.gabrielfeo.develocity.api/-config/cache-config.html","searchKeys":["cacheConfig","val cacheConfig: Config.CacheConfig","com.gabrielfeo.develocity.api.Config.cacheConfig"]},{"name":"val cacheDir: File","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.cacheDir","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/cache-dir.html","searchKeys":["cacheDir","val cacheDir: File","com.gabrielfeo.develocity.api.Config.CacheConfig.cacheDir"]},{"name":"val cacheEnabled: Boolean","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.cacheEnabled","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/cache-enabled.html","searchKeys":["cacheEnabled","val cacheEnabled: Boolean","com.gabrielfeo.develocity.api.Config.CacheConfig.cacheEnabled"]},{"name":"val clientBuilder: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.Config.clientBuilder","location":"library/com.gabrielfeo.develocity.api/-config/client-builder.html","searchKeys":["clientBuilder","val clientBuilder: <Error class: unknown class>","com.gabrielfeo.develocity.api.Config.clientBuilder"]},{"name":"val logLevel: String?","description":"com.gabrielfeo.develocity.api.Config.logLevel","location":"library/com.gabrielfeo.develocity.api/-config/log-level.html","searchKeys":["logLevel","val logLevel: String?","com.gabrielfeo.develocity.api.Config.logLevel"]},{"name":"val longTermCacheMaxAge: Long","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.longTermCacheMaxAge","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/long-term-cache-max-age.html","searchKeys":["longTermCacheMaxAge","val longTermCacheMaxAge: Long","com.gabrielfeo.develocity.api.Config.CacheConfig.longTermCacheMaxAge"]},{"name":"val longTermCacheUrlPattern: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.longTermCacheUrlPattern","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/long-term-cache-url-pattern.html","searchKeys":["longTermCacheUrlPattern","val longTermCacheUrlPattern: <Error class: unknown class>","com.gabrielfeo.develocity.api.Config.CacheConfig.longTermCacheUrlPattern"]},{"name":"val maxCacheSize: Long","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.maxCacheSize","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/max-cache-size.html","searchKeys":["maxCacheSize","val maxCacheSize: Long","com.gabrielfeo.develocity.api.Config.CacheConfig.maxCacheSize"]},{"name":"val maxConcurrentRequests: Int?","description":"com.gabrielfeo.develocity.api.Config.maxConcurrentRequests","location":"library/com.gabrielfeo.develocity.api/-config/max-concurrent-requests.html","searchKeys":["maxConcurrentRequests","val maxConcurrentRequests: Int?","com.gabrielfeo.develocity.api.Config.maxConcurrentRequests"]},{"name":"val readTimeoutMillis: Long","description":"com.gabrielfeo.develocity.api.Config.readTimeoutMillis","location":"library/com.gabrielfeo.develocity.api/-config/read-timeout-millis.html","searchKeys":["readTimeoutMillis","val readTimeoutMillis: Long","com.gabrielfeo.develocity.api.Config.readTimeoutMillis"]},{"name":"val shortTermCacheMaxAge: Long","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.shortTermCacheMaxAge","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/short-term-cache-max-age.html","searchKeys":["shortTermCacheMaxAge","val shortTermCacheMaxAge: Long","com.gabrielfeo.develocity.api.Config.CacheConfig.shortTermCacheMaxAge"]},{"name":"val shortTermCacheUrlPattern: <Error class: unknown class>","description":"com.gabrielfeo.develocity.api.Config.CacheConfig.shortTermCacheUrlPattern","location":"library/com.gabrielfeo.develocity.api/-config/-cache-config/short-term-cache-url-pattern.html","searchKeys":["shortTermCacheUrlPattern","val shortTermCacheUrlPattern: <Error class: unknown class>","com.gabrielfeo.develocity.api.Config.CacheConfig.shortTermCacheUrlPattern"]}]
